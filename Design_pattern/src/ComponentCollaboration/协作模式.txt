组件协作模式
通过晚期绑定，来实现框架和应用程序间的松耦合
典型模式
1. Template Method
2. Strategy
3. Observer/Event:观察者模式


https://www.cnblogs.com/adamjwh/p/11011095.html
策略模式的应用
　　1. 何时使用
一个系统有许多类，而区分它们的只是他们直接的行为时
　　2. 方法
将这些算法封装成一个一个的类，任意的替换
　　3. 优点
算法可以自由切换
避免使用多重条件判断（如果不用策略模式我们可能会使用多重条件语句，不利于维护）
扩展性良好，增加一个策略只需实现接口即可
　　4. 缺点
策略类数量会增多，每个策略都是一个类，复用的可能性很小
所有的策略类都需要对外暴露
　　5. 使用场景
多个类只有算法或行为上稍有不同的场景
算法需要自由切换的场景
需要屏蔽算法规则的场景
　　6. 应用实例
出行方式，自行车、汽车等，每一种出行方式都是一个策略
商场促销方式，打折、满减等
Java AWT中的LayoutManager，即布局管理器
　　7. 注意事项
如果一个系统的策略多于四个，就需要考虑使用混合模式来解决策略类膨胀的问题